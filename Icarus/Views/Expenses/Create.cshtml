@model Icarus.Models.tblExpens

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<style>
    .tableheadleft {
        border-top-left-radius: 15px !important;
    }

    .tableheadright {
        border-top-right-radius: 15px !important;
    }

    .assertionTable::-webkit-scrollbar {
        width: 12px; /* width of the entire scrollbar */
        background-color: #dddddd;
        height: 10px;
    }

    .assertionTable::-webkit-scrollbar-track {
        background: #dddddd !important; /* color of the tracking area */
    }

    .assertionTable::-webkit-scrollbar-thumb {
        background: #808080 !important; /* color of the scroll thumb */
        border-radius: 20px; /* roundness of the scroll thumb */
        border: 3px solid grey !important; /* creates padding around scroll thumb */
    }

    .assertionTable {
        display: block;
        overflow-x: auto;
        white-space: nowrap;
    }
</style>
<script src="~/Scripts/jquery-3.3.1.js"></script>
<script>
    $(document).ready(function () {
        document.title = 'Create Expense';
        var now = new Date();
        var day = ("0" + now.getDate()).slice(-2);
        var month = ("0" + (now.getMonth() + 1)).slice(-2);
        var today = now.getFullYear() + "-" + (month) + "-" + (day);
        $('.assertionDate').val(today);
        $('.assertiondate').val(today);
        $('.dateassertion').val(today);
        $('.addassertiondateposted').val(today);
        $('.addAssertion').hide();
        $('.assertionDate').hide();
        $('.description').hide();
        $('.assertionCategory').hide();
        $('.idToCodep').hide();
        $('.idExpense').hide();
        $('.saveallassertion').hide();
        $('.posteddate').val(new Date().toLocaleString("sv-SE", {
            year: "numeric",
            month: "2-digit",
            day: "2-digit",
            hour: "2-digit",
            minute: "2-digit",
            second: "2-digit"
        }).replace(" ", "T"));
        $('.expensedate').val(new Date().toLocaleString("sv-SE", {
            year: "numeric",
            month: "2-digit",
            day: "2-digit",
            hour: "2-digit",
            minute: "2-digit",
            second: "2-digit"
        }).replace(" ", "T"));
        var tableStart = "<table class='table table-striped table-hover table-borderless'></table>";
        var tableHeader = "<thead style='background-color: #6C7AE0; color: white;'><tr><th class='tableheadleft'>ID CTC</th><th>Posted Date</th><th>Description</th><th>Category</th><th>Qty</th><th>Price</th><th>MarkUp%</th><th>MarkUpValue</th><th>MarkupPrice</th><th>Subtotal</th><th class='tableheadright'>Notes</th></tr></thead><tbody></tbody>";
        var tableEnd = "</table>";
        var assertList = [];

        $(".markup").on("keyup", function () {
            var price = $(".price").val();
            var qty = $(".qty").val();
            var totalPrice = price * qty;
            var markUpPercent = $(this).val();
            if (markUpPercent != 0) {
                var markUpValue = ((totalPrice * markUpPercent) / 100);
                var subTotal = totalPrice + markUpValue;
                $(".markupvalue").val(markUpValue);
                $(".subtotal").val(subTotal);
            }
            else {
                console.log("Reading")
                $(".markupvalue").val(0);
                $(".subtotal").val(totalPrice);
            }

        })
        $(".price").on("keyup", function () {
            var price = $(this).val();
            var qty = $(".qty").val();
            var totalPrice = price * qty;
            var markUpPercent = $(".markup").val();
            if (markUpPercent != 0) {
                var markUpValue = ((totalPrice * markUpPercent) / 100);
                var subTotal = totalPrice + markUpValue;
                $(".markupvalue").val(markUpValue);
                $(".subtotal").val(subTotal);
            }
            else {
                $(".markupValue").val(0);
                $(".subtotal").val(totalPrice);
            }
        });
        $(".qty").on("keyup", function () {
            var price = $(".price").val();
            var qty = $(this).val();
            var totalPrice = price * qty;
            var markUpPercent = $(".markup").val();
            if (markUpPercent != 0) {
                var markUpValue = ((totalPrice * markUpPercent) / 100);
                var subTotal = totalPrice + markUpValue;
                $(".markupvalue").val(markUpValue);
                $(".subtotal").val(subTotal);
            }
            else {
                $(".markupvalue").val(0);
                $(".subtotal").val(totalPrice);
            }
        });

        $('.chargeCodep').on('change', function () {
            if (this.value == "Y") {
                $('.addAssertion').show();
                $('.assertionDate').show();
                $('.assertionCategory').show();
                $('.idToCodep').show();
                $('.idExpense').show();
                $('.description').show();
                window.scrollTo(0, document.body.scrollHeight);
            } else {
                $('.addAssertion').hide();
                $('.assertionDate').hide();
                $('.assertionCategory').hide();
                $('.idToCodep').hide();
                $('.idExpense').hide();
                $('.description').hide();
            }
        });

        $('.cancel').on('click', function () {
            $(".chargeCodep").val('N');
            $(".qty").val(0);
            $(".price").val(0);
            $(".markup").val(0);
            $(".markupvalue").val(0);
            $(".subtotal").val(0);
            $(".assertionnote").val('');
        });

        $(".amount").on('keyup', function () {
            var amount = $(this).val();
            var vatsales = amount - (amount * .12);
            var vatamount = amount * .12;
            if (vatsales % 1 != 0) {
                vatsales = vatsales.toFixed(2);
            }
            if (vatamount % 1 != 0) {
                vatamount = vatamount.toFixed(2);
            }
            $(".vatsales").val(vatsales);
            $(".vatamount").val(vatamount);
        });

        $(".addAssertion").on('click', function () {
            var description = $("#description").val();
            description == '' || description == null ? $("#descriptionMessage").text("Description is required!") : $("#descriptionMessage").text(null);
            console.log('Description', description);
            if (description != null && description != '') {
                $(".assertionModal").modal();
            }
        });

        $(".addButton").on('click', function () {
            var qty = $(".qty").val();
            var price = $(".price").val();
            var markup = $(".markup").val();
            var markupvalue = $(".markupvalue").val();
            var subtotal = $(".subtotal").val();
            var assertionnote = $(".assertionnote").val();
            var assertionDate = $('.assertiondate').val();
            var assertiondateposted = $('.addassertiondateposted').val();
            console.log('ID VALUE', $(".admission").val());
            console.log('ID VALUE', $(".category").val());
            if (qty == 0 || qty == null) {
                return $("#qtyMessage").text("Quantity should be greater than zero!");
            } else {
                $("#qtyMessage").text(null)
            }

            if (price == 0 || price == null) {
                return $("#priceMessage").text("Price should be greater than zero!");
            } else {
                $("#priceMessage").text("")
            }

            if (markupvalue == null || markupvalue == '') {
                markupvalue = 0.00;
            }

            if (markup == null || markup == '') {
                markup = 0.00;
            }

            if (assertionnote == "") {
                assertionnote = '';
            }

            console.log('ARRAY', assertList.length);
            var row = "<tr><td>" +@ViewBag.lastIDCTC + "</td><td>" + assertionDate + "</td><td>" + $("#description").val() + "</td><td>" + $(".category option:selected").text() + "</td><td>" + qty + "</td><td>" + price + "</td><td>" + markup + "</td><td>" + markupvalue + "</td><td>" + subtotal + "</td><td>" + subtotal + "</td><td>" + assertionnote + "</td></tr>";

            if (jQuery.isEmptyObject(assertList)) {
                $(".assertionTable").append(tableStart)
                $(".table").append(tableHeader)
                $(".table tbody").append(row);
            }
            else {
                $(".table tbody").append(row);
            }

            assertList.push(assertion = {
                Description: $("#description").val(),
                IDAdmission: $(".admission").val(),
                AssertionDate: assertionDate,
                IDAssertionCategory: $(".category").val(),
                Qty: qty,
                Price: price,
                Markup: markup,
                MarkupValue: markupvalue,
                SubTotal: subtotal,
                Notes: assertionnote,
                IDChargeToCodep: @ViewBag.lastIDCTC,
                PostedDate: $(".addassertiondateposted").val()
            });
            $('.saveallassertion').show();
            $("#assertionModal").modal("hide");
            console.log(assertList);
            window.scrollTo(0, document.body.scrollHeight);
        });

        $(".saveallassertion").on('click', function () {
            $.each(assertList, function (index, value) {
                console.log('VALUE', value);
                $.ajax({
                    url: '/Expenses/CreateAssertion',
                    method: "POST",
                    data: value,
                    success:function (data) {
                        if (index == assertList.length-1) {
                            alert(data);
                        }
                    },
                    error: function (err) {
                        console.log(err);
                    }
                });
            });
        });

        $(".cancelButton").on("click", function () {
            $(".assertionModal").find('form').trigger('reset');
        });

        $('.assertionModal').on('hidden.bs.modal', function () {
            $(this).find('form').trigger('reset');
        });

        $('.assertionModal').on('show.bs.modal', function () {
            $('.assertiondate').val(today);
            $('.addassertiondateposted').val(today);
        });



    });
</script>

<div class="container mb-5 pb-5">
    <h2>Create Expense</h2>
    <hr />
    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.EncodedBy)

        <div class="form">
            <div class="form-row">
                <div class="form-group col-sm-4">
                    <label><b>Date Posted</b></label>
                    @Html.TextBoxFor(model => model.PostedDate, new { @type = "datetime-local", @class = "form-control posteddate" })
                </div>
                <div class="form-group col-sm-4">
                    <label><b>Expense Date</b></label>
                    @Html.TextBoxFor(model => model.ExpenseDate, new { @type = "datetime-local", @class = "form-control expensedate" })
                </div>
                <div class="form-group col-sm-4">
                    <label><b>OR Number</b></label>
                    @Html.EditorFor(model => model.ORNumber, new { htmlAttributes = new { @class = "form-control" } })
                </div>
            </div>
            <div class="form-row">
                <div class="form-group col-sm-4">
                    <label><b>Vendor</b></label>
                    @Html.DropDownListFor(model => model.IDVendor, ViewBag.vendors as SelectList, new { @class = "form-control" })
                </div>
                <div class="form-group col-sm-4">
                    <label><b>With Receipt</b></label>
                    @Html.DropDownListFor(modelItem => modelItem.WithReceipt,
                            (
                                new[] { new SelectListItem { Text = "N", Value = "N" },
                                new SelectListItem { Text = "Y", Value = "Y" }
                            }),
                            new { @class = "form-control" })
                </div>
                <div class="form-group col-sm-4">
                    <label><b>ID Account</b></label>
                    @Html.DropDownListFor(model => model.IDAccount, ViewBag.accountsList as SelectList, new { @class = "form-control" })
                </div>
            </div>
            <div class="form-row">
                <div class="form-group col-sm-4">
                    <label><b>Verified</b></label>
                    @Html.DropDownListFor(modelItem => modelItem.IsVerified,
                            (
                                new[] { new SelectListItem { Text = "N", Value = "N" },
                                new SelectListItem { Text = "Y", Value = "Y" }
                            }),
                            new { @class = "form-control" })
                </div>
                <div class="form-group col-sm-4">
                    <label><b>Amount</b></label>
                    @Html.EditorFor(model => model.Amount, new { htmlAttributes = new { @type = "number", @class = "form-control amount", @Value="0.00" } })
                </div>
                <div class="form-group col-sm-4">
                    <label><b>VAT Sales</b></label>
                    @Html.EditorFor(model => model.VATSales, new { htmlAttributes = new { @type = "number", @class = "form-control vatsales", @Value="0.00", disabled=true } })
                </div>
            </div>
            <div class="form-row">
                <div class="form-group col-sm-4">
                    <label><b>VAT Amount</b></label>
                    @Html.EditorFor(model => model.VATAmount, new { htmlAttributes = new { @type = "number", @class = "form-control vatamount", @Value="0.00", disabled=true } })

                </div>
                <div class="form-group col-sm-4">
                    <label><b>VAT Exempt</b></label>
                    @Html.EditorFor(model => model.VATExempt, new { htmlAttributes = new { @type = "number", @class = "form-control vatexempt", @Value="0.00" } })
                </div>
                <div class="form-group col-sm-4">
                    <label><b>TIN</b></label>
                    @Html.EditorFor(model => model.TIN, new { htmlAttributes = new { @type = "number", @class = "form-control tin" } })
                </div>
            </div>
            <div class="form-row">
                <div class="form-group col-sm-4">
                    <label><b>Charged To Codep</b></label>
                    @Html.EditorFor(model => model.ChargedToCodep, new { htmlAttributes = new { @type = "number", @class = "form-control", @Value="0.00" } })
                </div>
                <div class="form-group col-sm-4">
                    <label><b>Charge To Codep</b></label>
                    @Html.DropDownListFor(modelItem => modelItem.ChargeToCodep,
                            (
                                new[] { new SelectListItem { Text = "N", Value = "N" },
                                new SelectListItem { Text = "Y", Value = "Y" }
                            }),
                            new { @class = "form-control chargeCodep" })
                </div>
                <div class="form-group col-sm-4">
                    <label><b>Particulars</b></label>
                    @Html.TextAreaFor(model => model.Particulars, new { @class = "form-control", @rows = 5 })
                </div>
            </div>
            <div class="form-row">
                <div class="form-group">
                    <div class="pull-left">
                        <a type="button" class="btn btn-sm btn-warning" href="/Expenses">Go Back</a>
                        <input type="submit" value="Create" class="btn btn-primary btn-sm" />
                    </div>
                </div>
            </div>
        </div>
    }
    <div id="assertionButton">
        <button class="btn addAssertion" id="addAssertion" style="background-color:#4E58A2;color:white;">
            <i class="fa fa-plus-circle" aria-hidden="true"></i>
            <span>&nbsp;Add Assertion</span>
        </button>
        <div class="row col-sm-12 mt-4">
            <div class="col-sm-3 pl-0 idToCodep">
                <label>ID ChargeTo Codep</label>
                <input class="form-control idctc" value="@ViewBag.lastIDCTC" type="number" disabled />
                <span></span>
            </div>
            <div class="col-sm-3 pl-0 idExpense">
                <label>ID Expense</label>
                <input class="form-control idexpense" value="@ViewBag.lastIDEXP" type="number" disabled />
            </div>
            <div class="col-sm-3 pl-0 assertionDate">
                <label>Charge Date</label>
                <input class="form-control dateassertion" type="date"/>
            </div>
            <div class="col-sm-3 pl-0 assertionCategory">
                <label>Assertion Category</label>
                <select class="form-control categorychooser" id="categoryChooser">
                    @foreach (var item in ViewBag.category)
                    {
                        <option value="@item.Value">@item.Text</option>
                    }
                </select>
            </div>
        </div>
        <div class="row col-sm-12 mt-4">
            <div class="col-sm-3 description pl-0">
                <label><b>Description</b></label>
                <input class="form-control description" id="description" />
                <span id="descriptionMessage" style="color:red;"></span>
            </div>
        </div>
    </div>

    <div class="modal fade assertionModal" id="assertionModal" role="dialog">
        <div class="modal-dialog modal-lg" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h4 class="modal-title" id="gridSystemModalLabel">Add Assertion</h4>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                </div>
                <div class="modal-body">
                    <form>
                        <div class="row p-2">
                            <div class="col-sm-4">
                                <label><b>ID Admission</b></label>
                                <select class="form-control admission" id="admission">
                                    @foreach (var item in ViewBag.residentList)
                                    {
                                        <option value="@item.Value">@item.Text</option>
                                    }
                                </select>
                                <span id="admissionMessage"></span>
                            </div>
                            <div class="col-sm-4">
                                <label><b>Assertion Date</b></label>
                                <input class="form-control assertiondate" name="assertiondate" type="date" />
                                <span id="assertionDateMessage"></span>
                            </div>
                            <div class="col-sm-4">
                                <label><b>Qty</b></label>
                                <input class="form-control qty" name="qty" type="number" value="0" min="0" step="1" oninput="validity.valid||(value='');" />
                                <span style="color:red;" id="qtyMessage"></span>
                            </div>
                        </div>
                        <div class="row p-2">
                            <div class="col-sm-4">
                                <label><b>Assertion Category</b></label>
                                <select class="form-control category" name="category">
                                    @foreach (var item in ViewBag.category)
                                    {
                                        <option value="@item.Value">@item.Text</option>
                                    }
                                </select>
                                <span id="assertionCategoryMessage"></span>
                            </div>
                            <div class="col-sm-4">
                                <label><b>Price</b></label>
                                <input class="form-control price" name="price" type="number" value="0" />
                                <span id="priceMessage" style="color:red;"></span>
                            </div>
                            <div class="col-sm-4">
                                <label><b>Markup %</b></label>
                                <input class="form-control markup" name="markup" type="number" value="0.00" />
                                <span id="markupMessage"></span>
                            </div>
                        </div>
                        <div class="row p-2">
                            <div class="col-sm-4">
                                <label><b>Markup Value</b></label>
                                <input type="number" class="form-control markupvalue" name="markupvalue" value="0.00" />
                                <span id="markupValueMessage"></span>
                            </div>
                            <div class="col-sm-4">
                                <label><b>Subtotal</b></label>
                                <input type="number" class="form-control subtotal" value="0" name="subtotal" disabled />
                                <span id="subtotalMessage"></span>
                            </div>
                            <div class="col-sm-4">
                                <label><b>Posted Date</b></label>
                                <input type="date" class="form-control addassertiondateposted" name="posteddate" id="addassertiondateposted" />
                                <span id="postedDateMessage"></span>
                            </div>
                        </div>
                        <div class="row p-2">
                            <div class="col-sm-4">
                                <label><b>Notes</b></label>
                                <textarea class="form-control assertionnote" rows="5" id="note"></textarea>
                                <span id="notesMessage"></span>
                            </div>
                        </div>
                    </form>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-danger cancelButton" data-dismiss="modal">Cancel</button>
                    <button type="button" class="btn btn-primary addButton">Add</button>
                </div>
            </div><!-- /.modal-content -->
        </div><!-- /.modal-dialog -->
    </div><!-- /.modal -->
</div>
<div class="container">
    <button class="btn saveallassertion" style="background-color:#4E58A2;color:white;">Save All Assertion</button>
    <br />
    <div class="assertionTable">

    </div>
</div>