@model Icarus.Models.tblCodepUpdate

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<script>
    $(document).ready(function () {
        document.title = 'Create Codep Update';
    });
</script>

<div class="container">
    <h2>Create Codep Update</h2>
    <hr />
    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.UpdatedBy)
    <div class="form">
        <div class="form-row">
            <div class="form-group col-sm-4">
                <label><b>Date Update</b></label>
                @Html.TextBoxFor(model => model.DateUpdate, new { @type = "datetime-local", @class = "form-control", @id = "dateupdate", Required=true })
            </div>
            <div class="form-group col-sm-4">
                <label><b>Date Log</b></label>
                @Html.TextBoxFor(model => model.DateLog, new { @type = "datetime-local", @class = "form-control", @id = "datelog", Required=true })
            </div>
            <div class="form-group col-sm-4">
                <label><b>Update Type</b></label>
                @Html.DropDownListFor(model => model.UpdateType,
                        (
                            new[] { new SelectListItem { Text = "Program", Value = "Program" },
                            new SelectListItem { Text = "Medical", Value = "Medical" }
                        }),
                        new { @class = "form-control" })
            </div>
        </div>
        <div class="form-row">
            <div class="form-group col-sm-4">
                <label><b>Admission</b></label>
                @Html.DropDownListFor(model => model.IDAdmission, ViewBag.residentList as SelectList, new { @class = "form-control", Required=true })
            </div>
            <div class="form-group col-sm-4">
                <label><b>Update By</b></label>
                @Html.EditorFor(model => model.UpdatedBy, new { htmlAttributes = new { @class = "form-control", Value=Session["Username"].ToString(), disabled=true } })
            </div>
            <div class="form-group col-sm-4">
                <label><b>Update Summary</b></label>
                @Html.TextAreaFor(model => model.UpdateSummary, new { @class = "form-control", @rows = 5, Required=true })
            </div>
        </div>
        <div class="form-row">
            <div class="form-group">
                <div class="pull-left">
                    <a type="button" class="btn btn-sm btn-warning" href="/CodepUpdates">Go Back</a>
                    <input type="submit" value="Create" class="btn btn-primary btn-sm" />
                </div>
            </div>
        </div>
    </div>
    }
</div>

    @*<h2>Create</h2>


        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()

            <div class="form-horizontal">
                <h4>vselCodepUpdateBrowse</h4>
                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="form-group">
                    @Html.LabelFor(model => model.IDUpdate, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.IDUpdate, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.IDUpdate, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.DateUpdate, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.DateUpdate, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.DateUpdate, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.DateLog, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.DateLog, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.DateLog, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.UpdateType, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.UpdateType, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.UpdateType, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.UpdatedBy, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.UpdatedBy, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.UpdatedBy, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.UpdateSummary, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.UpdateSummary, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.UpdateSummary, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.IDAdmission, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.IDAdmission, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.IDAdmission, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Resident, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Resident, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Resident, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Create" class="btn btn-default" />
                    </div>
                </div>
            </div>
        }

        <div>
            @Html.ActionLink("Back to List", "Index")
        </div>

        @section Scripts {
            @Scripts.Render("~/bundles/jqueryval")
        }*@
