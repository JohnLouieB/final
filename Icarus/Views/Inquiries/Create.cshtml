@model Icarus.Models.tblInquiry

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="container">
    <h2>Create Inquiry Log</h2>
    <hr />
    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()
    <div class="form">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            <div class="row">
                <div class="col">
                    @Html.LabelFor(model => model.InquiryDate, htmlAttributes: new { @class = "control-label" })
                </div>
                <div class="col">
                    @Html.EditorFor(model => model.InquiryDate, new { htmlAttributes = new { @type = "datetime-local", @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.InquiryDate, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="form-group">
            <div class="row">
                <div class="col">
                    @Html.LabelFor(model => model.ContactNo, htmlAttributes: new { @class = "control-label" })
                </div>
                <div class="col">
                    @Html.EditorFor(model => model.ContactNo, new { htmlAttributes = new { @type = "number", @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ContactNo, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="form-group">
            <div class="row">
                <div class="col">
                    @Html.LabelFor(model => model.Codep, htmlAttributes: new { @class = "control-label" })
                </div>
                <div class="col">
                    @Html.EditorFor(model => model.Codep, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Codep, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="form-group">
            <div class="row">
                <div class="col col-sm-6 py-auto">
                    @Html.LabelFor(model => model.Prospect, htmlAttributes: new { @class = "control-label" })
                </div>
                <div class="col col-sm-6">
                    @Html.EditorFor(model => model.Prospect, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Prospect, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="form-group">
            <div class="row">
                <div class="col col-sm-6 py-auto">
                    @Html.LabelFor(model => model.FollowupOn, htmlAttributes: new { @class = "control-label" })
                </div>
                <div class="col col-sm-6">
                    @Html.EditorFor(model => model.FollowupOn, new { htmlAttributes = new { @type = "datetime-local", @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.FollowupOn, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="form-group">
            <div class="row">
                <div class="col">
                    @Html.LabelFor(model => model.IDInquiryStatus, htmlAttributes: new { @class = "control-label" })
                </div>
                <div class="col">
                    @Html.DropDownListFor(modelItem => modelItem.IDInquiryStatus,
                                 (
                                     new[] { new SelectListItem { Text = "Open", Value = "1" },
                                     new SelectListItem { Text = "For Followup", Value = "2" },
                                     new SelectListItem { Text = "Closed - Converted", Value = "3" },
                                     new SelectListItem { Text = "Closed - Did Not Convert", Value = "4" }
                                 }),
                                 new { @class = "form-control stopTF" })
                    @Html.ValidationMessageFor(model => model.IDInquiryStatus, "", new { @class = "text-danger" })

                </div>
            </div>
        </div>
        <div class="form-group">
            <div class="row">
                <div class="col">
                    @Html.LabelFor(model => model.Details, htmlAttributes: new { @class = "control-label" })
                </div>
                <div class="col">
                    @Html.LabelFor(modelItem => modelItem.Details)
                    @Html.TextAreaFor(modelItem => modelItem.Details, new { @class = "form-control", @rows = 5 })
                </div>
            </div>
        </div>
        <div class="form-group pull-right">
            <div class="row">
                <div class="col mr-4">
                    <a class="btn btn-warning btn-sm" href="javascript:history.back()">Go back</a>
                    <input type="submit" value="Create" class="btn btn-sm btn-primary" />
                </div>
            </div>
        </div>
    </div>
    }

</div>
<script>
    $(document).ready(function () {
        document.title = 'Create Inquiry Log';
    });
</script>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
